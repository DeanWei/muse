<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mogujie.jarvis.dao.generate.OperationLogMapper">
  <resultMap id="BaseResultMap" type="com.mogujie.jarvis.dto.generate.OperationLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="refer" jdbcType="VARCHAR" property="refer" />
    <result column="opeDate" jdbcType="TIMESTAMP" property="opeDate" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mogujie.jarvis.dto.generate.OperationLog">
    <result column="operationType" jdbcType="LONGVARCHAR" property="operationType" />
    <result column="preOperationContent" jdbcType="LONGVARCHAR" property="preOperationContent" />
    <result column="afterOperationContent" jdbcType="LONGVARCHAR" property="afterOperationContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, operator, refer, opeDate, type
  </sql>
  <sql id="Blob_Column_List">
    operationType, preOperationContent, afterOperationContent
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.mogujie.jarvis.dto.generate.OperationLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.mogujie.jarvis.dto.generate.OperationLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from operation_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from operation_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mogujie.jarvis.dto.generate.OperationLogExample">
    delete from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mogujie.jarvis.dto.generate.OperationLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into operation_log (title, operator, refer, 
      opeDate, type, operationType, 
      preOperationContent, afterOperationContent
      )
    values (#{title,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, #{refer,jdbcType=VARCHAR}, 
      #{opeDate,jdbcType=TIMESTAMP}, #{type,jdbcType=VARCHAR}, #{operationType,jdbcType=LONGVARCHAR}, 
      #{preOperationContent,jdbcType=LONGVARCHAR}, #{afterOperationContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mogujie.jarvis.dto.generate.OperationLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into operation_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="refer != null">
        refer,
      </if>
      <if test="opeDate != null">
        opeDate,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="operationType != null">
        operationType,
      </if>
      <if test="preOperationContent != null">
        preOperationContent,
      </if>
      <if test="afterOperationContent != null">
        afterOperationContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="refer != null">
        #{refer,jdbcType=VARCHAR},
      </if>
      <if test="opeDate != null">
        #{opeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null">
        #{operationType,jdbcType=LONGVARCHAR},
      </if>
      <if test="preOperationContent != null">
        #{preOperationContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="afterOperationContent != null">
        #{afterOperationContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mogujie.jarvis.dto.generate.OperationLogExample" resultType="java.lang.Integer">
    select count(*) from operation_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update operation_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.refer != null">
        refer = #{record.refer,jdbcType=VARCHAR},
      </if>
      <if test="record.opeDate != null">
        opeDate = #{record.opeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.operationType != null">
        operationType = #{record.operationType,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.preOperationContent != null">
        preOperationContent = #{record.preOperationContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.afterOperationContent != null">
        afterOperationContent = #{record.afterOperationContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update operation_log
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      refer = #{record.refer,jdbcType=VARCHAR},
      opeDate = #{record.opeDate,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=VARCHAR},
      operationType = #{record.operationType,jdbcType=LONGVARCHAR},
      preOperationContent = #{record.preOperationContent,jdbcType=LONGVARCHAR},
      afterOperationContent = #{record.afterOperationContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update operation_log
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      refer = #{record.refer,jdbcType=VARCHAR},
      opeDate = #{record.opeDate,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mogujie.jarvis.dto.generate.OperationLog">
    update operation_log
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="refer != null">
        refer = #{refer,jdbcType=VARCHAR},
      </if>
      <if test="opeDate != null">
        opeDate = #{opeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="operationType != null">
        operationType = #{operationType,jdbcType=LONGVARCHAR},
      </if>
      <if test="preOperationContent != null">
        preOperationContent = #{preOperationContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="afterOperationContent != null">
        afterOperationContent = #{afterOperationContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mogujie.jarvis.dto.generate.OperationLog">
    update operation_log
    set title = #{title,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      refer = #{refer,jdbcType=VARCHAR},
      opeDate = #{opeDate,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR},
      operationType = #{operationType,jdbcType=LONGVARCHAR},
      preOperationContent = #{preOperationContent,jdbcType=LONGVARCHAR},
      afterOperationContent = #{afterOperationContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mogujie.jarvis.dto.generate.OperationLog">
    update operation_log
    set title = #{title,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      refer = #{refer,jdbcType=VARCHAR},
      opeDate = #{opeDate,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>